#!/bin/ksh -p
# (-p so we do not read the ksh profile. Some ksh do that)

#
# BSD 3-Clause License
#
# Copyright (c) 2019, The Regents of the University of California
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# -- zrouter server
# \
    d=$(dirname $0); PATH=$d:$PATH exec zroutesh $0 "$@"

package require Itcl

# -- hack for dimitris
#rename source src
#proc source {file} {
#    uplevel [list src $file]
#}
set top [file dirname [file norm $argv0]]

# -- are we running in dev mode?
if [string match */zrouter/src/* $top] {
    set lib [file dirname $top]
    puts stderr "NOTICE: $argv0 running in development mode"
} else {
    set lib [file join [file dirname $top] lib]
}
set auto_path \
    [concat $lib [file join $lib zroute] [file join $lib mtlib] $auto_path]

set appname [file tail $argv0]
append auto_path " [file join $lib milos]"
set appname [file tail $argv0]
package require ade::main 1.0
if { $appname ne "ade" } {
    package require ade::$appname 1.0
}
package require ade::license 1.0
package require LMSH 1.0

#LLogger::Auto -logfile -

if { $appname == "turborc" } {
    set rcp "~/.turborc:./.turborc"
} else {
    set rcp "~/.${appname}rc:./.${appname}rc"
}

if [catch { ZROUTE zr -rcpath $rcp ; zr Run } err ] {
    global errorInfo
    puts stderr "ade: runtime error"
    puts stderr $errorInfo
    if { $::tcl_platform(platform) == "windows" } {
	puts stderr "-- RETURN to EXIT -- "
	gets stdin line
    }
    exit 100
}
set rc [zr Wait]
zr delete
# -- rc is the exit code
if { $rc == "" } { 
    set rc 0
}
exit $rc
