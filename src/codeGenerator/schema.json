{
  "classes": [
    {
      "name": "dbTechLayerSpacingEolRule",
      "type": "dbObject",
      "fields": [
        {
          "type": "double",
          "name": "eolSpace",
          "flags": []
        },
        {
          "type": "double",
          "name": "eolwidth",
          "flags": []
        },
        {
          "type": "bool",
          "name": "EXACTWIDTH",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "WRONGDIRSPACING",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "wrongDirSpace",
          "flags": []
        },
        {
          "type": "bool",
          "name": "OPPOSITEWIDTH",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "oppositeWidth",
          "flags": []
        },
        {
          "type": "bool",
          "name": "WITHIN",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "eolWithin",
          "flags": []
        },
        {
          "type": "bool",
          "name": "WRONGDIRWITHIN",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "wrongDirWithin",
          "flags": []
        },
        {
          "type": "bool",
          "name": "SAMEMASK",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "EXCEPTEXACTWIDTH",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "exactWidth",
          "flags": []
        },
        {
          "type": "double",
          "name": "otherWidth",
          "flags": []
        },
        {
          "type": "bool",
          "name": "FILLCONCAVECORNER",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "fillTriangle",
          "flags": []
        },
        {
          "type": "bool",
          "name": "WITHCUT",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "CUTCLASS",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "cutClass",
          "flags": []
        },
        {
          "type": "bool",
          "name": "withCutABOVE",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "withCutSpace",
          "flags": []
        },
        {
          "type": "bool",
          "name": "ENCLOSUREEND",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "enclosureEndWidth",
          "flags": []
        },
        {
          "type": "bool",
          "name": "ENCLOSUREENDWITHIN",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "enclosureEndWithin",
          "flags": []
        },
        {
          "type": "bool",
          "name": "ENDPRLSPACING",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "endPrlSpace",
          "flags": []
        },
        {
          "type": "bool",
          "name": "PRL",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "endPrl",
          "flags": []
        },
        {
          "type": "bool",
          "name": "ENDTOEND",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "endToEndSpace",
          "flags": []
        },
        {
          "type": "bool",
          "name": "hasCutSpaces",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "oneCutSpace",
          "flags": []
        },
        {
          "type": "double",
          "name": "twoCutSpace",
          "flags": []
        },
        {
          "type": "bool",
          "name": "EXTENSION",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "extension",
          "flags": []
        },
        {
          "type": "bool",
          "name": "hasWrongDirExtension",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "wrongDirExtension",
          "flags": []
        },
        {
          "type": "bool",
          "name": "OTHERENDWIDTH",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "otherEndWidth",
          "flags": []
        },
        {
          "type": "bool",
          "name": "MAXLENGTH",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "maxLength",
          "flags": []
        },
        {
          "type": "bool",
          "name": "MINLENGTH",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "minLength",
          "flags": []
        },
        {
          "type": "bool",
          "name": "TWOSIDES",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "EQUALRECTWIDTH",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "PARALLELEDGE",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "SUBTRACTEOLWIDTH",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "parSpace",
          "flags": []
        },
        {
          "type": "double",
          "name": "parWithin",
          "flags": []
        },
        {
          "type": "bool",
          "name": "PARPRL",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "parPrl",
          "flags": []
        },
        {
          "type": "bool",
          "name": "PARMINLENGTH",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "parMinLength",
          "flags": []
        },
        {
          "type": "bool",
          "name": "TWOEDGES",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "SAMEMETAL",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "NONEOLCORNERONLY",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "PARALLELSAMEMASK",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "ENCLOSECUT",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "BELOW",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "ABOVE",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "encloseDist",
          "flags": []
        },
        {
          "type": "bool",
          "name": "CUTSPACING",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "cutToMetalSpace",
          "flags": []
        },
        {
          "type": "bool",
          "name": "ALLCUTS",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "TOCONCAVECORNER",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "MINADJACENTLENGTH",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "bool",
          "name": "hasTwoMinAdjLength",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "minAdjLength",
          "flags": []
        },
        {
          "type": "double",
          "name": "minAdjLength1",
          "flags": []
        },
        {
          "type": "double",
          "name": "minAdjLength2",
          "flags": []
        },
        {
          "type": "bool",
          "name": "TONOTCHLENGTH",
          "flags": [],
          "bits": "1"
        },
        {
          "type": "double",
          "name": "notchLength",
          "flags": []
        }
      ],
      "constructors": [],
      "enums": [],
      "includes": [
        "dbException.h",
        "dbObject.h"
      ]
    },
    {
      "name":"dbModule",
      "type":"dbObject",
      "fields":[
        {
          "name":"_name",
          "type":"char *",
          "flags":["no-set"]
        },
        {
          "name":"_next_entry",
          "type":"dbId<_dbModule>",
          "flags":["no-set","no-get"]
        },
        {
          "name":"_insts",
          "type":"dbId<_dbInst>",
          "flags":["no-set","no-get"],
          "parent":"dbBlock"
        },
        {
          "name":"_modinsts",
          "type":"dbId<_dbModInst>",
          "flags":["no-set","no-get"],
          "parent":"dbBlock"
        },
        {
          "name":"_mod_inst",
          "type":"dbId<_dbModInst>",
          "flags":["no-set"],
          "parent":"dbBlock"
        }
      ],
      "constructors":[],
      "cpp_includes":["dbBlock.h","dbHashTable.hpp"]
    },
    {
      "name":"dbModInst",
      "type":"dbObject",
      "fields":[
        {
          "name":"_name",
          "type":"char *",
          "flags":["no-set","no-get"]
        },
        {
          "name":"_next_entry",
          "type":"dbId<_dbModInst>",
          "flags":["no-set","no-get"]
        },
        {
          "name":"_parent",
          "type":"dbId<_dbModule>",
          "flags":["no-set"],
          "parent":"dbBlock"
        },
        {
          "name":"_module_next",
          "type":"dbId<_dbModInst>",
          "flags":["no-get","no-set"],
          "parent":"dbBlock"
        },
        {
          "name":"_master",
          "type":"dbId<_dbModule>",
          "flags":["no-set"],
          "parent":"dbBlock"
        },
        {
          "name":"_group_next",
          "type":"dbId<_dbModInst>",
          "flags":["no-get","no-set"],
          "parent":"dbBlock"
        },
        {
          "name":"_group",
          "type":"dbId<_dbGroup>",
          "flags":["no-set"],
          "parent":"dbBlock"
        }
      ],
      "constructors":[],
      "cpp_includes":["dbBlock.h","dbModule.h","dbHashTable.hpp"]
    },
    {
      "name":"dbGroup",
      "type":"dbObject",
      "fields":[
        {
          "name":"_name",
          "type":"char *",
          "flags":["no-set"]
        },
        {
          "name":"_type",
          "type":"uint",
          "bits":2,
          "flags":["no-set","no-get"]
        },
        {
          "name":"_box",
          "type":"uint",
          "bits":1,
          "flags":["no-set","no-get"]
        },
        {
          "name":"_box",
          "type":"Rect",
          "flags":["no-set"]
        },
        {
          "name":"_next_entry",
          "type":"dbId<_dbGroup>",
          "flags":["no-set","no-get"]
        },
        {
          "name":"_group_next",
          "type":"dbId<_dbGroup>",
          "flags":["no-get","no-set"],
          "parent":"dbBlock"
        },
        {
          "name":"_parent_group",
          "type":"dbId<_dbGroup>",
          "flags":[],
          "parent":"dbBlock"
        },
        {
          "name":"_insts",
          "type":"dbId<_dbInst>",
          "flags":["no-set","no-get"],
          "parent":"dbBlock"
        },
        {
          "name":"_modinsts",
          "type":"dbId<_dbModInst>",
          "flags":["no-set","no-get"],
          "parent":"dbBlock"
        },
        {
          "name":"_groups",
          "type":"dbId<_dbGroup>",
          "flags":["no-set","no-get"],
          "parent":"dbBlock"
        },
        {
          "name":"_power_nets",
          "type":"dbVector<dbId<_dbNet>>",
          "flags":["no-set","no-get"]
        },
        {
          "name":"_ground_nets",
          "type":"dbVector<dbId<_dbNet>>",
          "flags":["no-set","no-get"]
        }
      ],
      "enums":[
        {
          "name":"dbGroupType",
          "values":[
            "PHYSICAL_CLUSTER",
            "VOLTAGE_DOMAIN"
          ],
          "public":true
        }
      ],
      "cpp_includes":["dbBlock.h","dbBox.h","dbNet.h","dbInst.h","dbModInst.h","dbHashTable.hpp","dbGroupItr.h","dbGroupInstItr.h","dbGroupModInstItr.h"]
    }
  ],
  "iterators":[
    {
      "name": "dbModuleInstItr",
      "parentObject": "dbInst",
      "tableName": "inst_tbl",
      "reversible": "true",
      "orderReversed": "true",
      "sequential": 0,
      "includes": ["dbModule.h", "dbInst.h", "dbTable.h"]
    },
    {
      "name": "dbModuleModInstItr",
      "parentObject": "dbModInst",
      "tableName": "modinst_tbl",
      "reversible": "true",
      "orderReversed": "true",
      "sequential": 0,
      "includes": ["dbModule.h", "dbModInst.h", "dbTable.h"]
    },
    {
      "name": "dbGroupModInstItr",
      "parentObject": "dbModInst",
      "tableName": "modinst_tbl",
      "reversible": "true",
      "orderReversed": "true",
      "sequential": 0,
      "includes": ["dbGroup.h", "dbModInst.h", "dbTable.h"]
    },
    {
      "name": "dbGroupItr",
      "parentObject": "dbGroup",
      "tableName": "group_tbl",
      "reversible": "true",
      "orderReversed": "true",
      "sequential": 0,
      "includes": ["dbGroup.h",  "dbTable.h"]
    },
    {
      "name": "dbGroupInstItr",
      "parentObject": "dbInst",
      "tableName": "inst_tbl",
      "reversible": "true",
      "orderReversed": "true",
      "sequential": 0,
      "includes": ["dbGroup.h", "dbInst.h", "dbTable.h"]
    }
  ]
}